[{"uri":"http://whywe.tech/posts/","title":"Posts","tags":[],"description":"Lastest content that I haven&#39;t yet integrated into the site structure","content":"This is where my latest content is posted, unstructured, ordered by date descending.\n"},{"uri":"http://whywe.tech/","title":"Why We Tech","tags":[],"description":"","content":"\nWhat is the status of technology in our lives?\nHumans have recorded stories involving technology going back to the most ancient writings. We also have extensive collections of human artifacts through which we can a tendency towards technology.\nWhat is the cultural evaluation of technology? Throughout history the tradesman, the tinkerer, and the artificer have been described as trivial actors on the world stage. The characters that populate histories before 1800 have been mostly conquerors and clerics. The rulers had a much larger role when citizens still called themselves \u0026ldquo;subjects\u0026rdquo;. The conquerors and rulers were the men that subjugated all the residents of their countries, and the clerics explained why this was their \u0026ldquo;divine right\u0026rdquo; or \u0026ldquo;mandate of heaven\u0026rdquo;. Before the special sciences, clerical scholars were focused on morality and the organization of society.\nTechnical innovators, it is becoming clear now, are not trivial actors on the world stage. Starting with the banks in Italy and \u0026ldquo;manufactories\u0026rdquo; of England, private owners were becoming as wealthy as royalty and, eventually, as heads of state.\nTheir wealth was not the result of conquering and looting the wealth accumulated by others, but by starting to identify the sources of wealth itself, and by producing more of it.\nThat was an entirely different approach than the clerics had always promoted, which were various forms of sharing equity, always favoring the conqueror/rulers who made the clerical way of life one of the three estates of their society.\nThe clerics worked for centuries on mystical solutions to life\u0026rsquo;s problems. The mystical solutions often failed. Miracles are not a method. So the clerics often settled for describing ways to accept \u0026ldquo;one\u0026rsquo;s lot in life\u0026rdquo;.\nFortunately for us, technological innovators did not settle. They produced the steam engine, and left the scholars to describe it and catch up. The \u0026ldquo;electricians\u0026rdquo; played with and demonstrated electrical phenomenon, and left the scholars to catch up. They created manufactories and division of labor, and left the scholars to catch up. They created mediums of exchange and fiduciary media and left the scholars to catch up.\nSlowly these innovations, and their subsequent elucidation by scholars, changed the way we thought, spoke, lived, and self-organized societies more than the scholars and clerics alone were ever able to do.\nThis website is directed at clarifying that history, and uniting the clerical scholars who are focused on morality, with the technical scholars and the technical innovators who are focused on technics, methods, and tacit knowledge of actually completing well-defined tasks and providing solutions to well-defined problems.\n"},{"uri":"http://whywe.tech/posts/testing-to-learn/","title":"Using the Test-&gt;Learn REPL For AWS Certs","tags":[],"description":"","content":"AWS Cloud Services is a large data object and learning them requires a fat data pipeline straight into your mind. I recently had to upgrade the throughput on that data channel and I want to record here how that happened.\nI scheduled my first AWS Exam for a Friday and had been doing the in-course questions and passing at about 80%. Then, on the Wednesday morning before the scheduled exam, I took the BenchPrep official practice exam. I scored 30%. There was a significant elevation of urgency.\nMy first signal optimization was to filter out the noise. Over the next several hours I blocked out all thinking about anything else, as much as that\u0026rsquo;s possible. I was able to eliminate all social media and as much interpersonal communication as possible and isolate my brain to a dedicated task, flushing the cache on almost all other concerns and clearing my plate.\nWithin those two and a half days I was able to turn my 30% score on the practice exam, which is significantly easier than the full exam, into an 82% on the official AWS Exam.\nI started making notes about the specific steps I used to make that semi-miraculous but technically achievable turn-around so I could use them again, and then I decided that the best way to validate which ones worked best was to test them again by taking the next AWS Exam. I didn\u0026rsquo;t want to panic-cram again for the next exams. I wanted to use what I learned from my panic-cram episode to create a smoother and less disruptive learning pipeline.\nOver the next few months I developed my learning process into what I call the \u0026ldquo;test-\u0026gt;learn REPL\u0026rdquo; and passed an additional 5 AWS Certified Exams:\nI learned some strong lessons about laser-focused learning, known as \u0026ldquo;deliberate practice\u0026rdquo;, which I want to record for myself and which I want to share with you in this post.\nNOTE: The first thing I did was to notify everyone I needed to that I would not be responding until after 6 PM Friday. You have to have your mind as clear as possible, and you can\u0026rsquo;t do that if you have something hanging over it. AWS allows rescheduling up to 24 hours before your scheduled exam.\nThe Test-\u0026gt;Learn REPL Rapid learning is like a superpower. Learning a new technology fast means all the subsequent work you do in that technology will be much more productive.\nThis is why testing is closely related to the whole field of technology. Technological improvements are characterized by one significant feature: They can be tested.\nTesting is the fastest way to validate your thinking.\nIt is better to be wrong than to be vague \u0026ndash;Freeman Dyson\nWhen a test reveals that one of your answers was wrong, you have learned something very valuable. The how-tos and guided tutorials don\u0026rsquo;t tell you much about the wrong assumptions you might be making.\nWhenever we want to know if a person understands a topic we start asking them questions about it. Those are little tests. It doesn\u0026rsquo;t prove they know the whole subject, so if we need higher levels of expertise, we continue to ask questions, or we might observe them working under real-world simulated test conditions.\nThis is the same process involved in learning by \u0026ldquo;experience\u0026rdquo;. Experience has a very broad definition, but in the context of learning it simply means you have been tested with active business challenges.\nThe AWS Certified exams are an attempt to approximate a specific set of active business challenges and use them to test and validate a candidate\u0026rsquo;s pertinent knowledge set.\nAWS Provides these stats regarding AWS Exam Certs:\nIn the same way that the AWS Certified exam is just an approximation of the real-world business challenges a developer may face, the Practice Exams available on Udemy, BenchPrep, and the AWS official practice questions are an approximation of the test questions on the AWS Certified Exam.\nThe self-testing process Try the free tests first. AWS provides practice exam questions for each official exam along with an Exam Guide here: Browse Exams\nThere are other free exams online and very cheap ones in the Android Play Store but those are mostly a waste of time.\nThe best practice exams I\u0026rsquo;ve found are the paid exams on Udemy. They\u0026rsquo;re mostly around $12, but up to $100 off-sale. Get a highly rated one and you should get a fair approximation of the official exam content domain.\nThe practice exams also give you good practice at performing at the pace of the AWS Exam. If you are scoring below 65% on the practice exams, you\u0026rsquo;re probably also taking too long. You don\u0026rsquo;t just need to answer the questions accurately, you also need to answer them quickly over the two or three-hour course of the Associate or Professional exams. Practice exams help you automatize that pace so you can recognize if you\u0026rsquo;ve gotten stuck on a question that you should flag and return to.\nThe Udemy exams allow you to take them as often as you want. That means you can stop if you get 2 out of the first 3 wrong.\n(I am not a salesperson for Udemy. If you know of any other good practice exams please create a PR for this article here: .)\nIt also means you can start testing before you start learning. I did this for a couple of exams so that I could get a baseline on the knowledge set.\nStop taking example questions if your pass rate is less than 60%. Avoid \u0026ldquo;gaming\u0026rdquo; the question by thinking \u0026ldquo;AWS always favors their newest product\u0026rdquo;. They\u0026rsquo;ve done a decent job of avoiding undue product bias in their answers. You\u0026rsquo;ll be able to use your failed questions to narrow down the target to study your weak areas. Exam review has a lot of information about the question! The Udemy practice exam review provides significant context for the exam question. This is the most important part of the Testing-\u0026gt;Learning REPL.\nBudget a few hours after each practice exam to review, drill down in the links, and understand the context of each question you failed. For verbiage-based topics, you can have the browser\u0026rsquo;s \u0026ldquo;Read Aloud\u0026rdquo; function read long content to you.\nUdemy practice exams are typically 4 exams of 65 questions so that each exam mimics the AWS Exam. They are timed based on the AWS Exam you are practicing for.\nThat means you can take one exam and study the answers for a few days, and then take another practice exam with another set of questions, so you don\u0026rsquo;t memorize the answer pattern. The questions are also rotated between exam attempts.\nComplexity of the questions Many of the 65 questions on the AWS Exam will be multiple choice. There is *NO PARTIAL CREDIT for partially right answers. If you need to provide three answers to a long question, you need to get all three right. The multi-answer questions always have to compose a single right answer altogether, so partially correct is wrong. That means you have to understand many of the use cases of the topic of the question. This is why using the tests as a measure of learning is valid. The AWS Service under test is a rich data object where you have to know what is right by also knowing a lot about what is not right. Hazards of Testing-\u0026gt;Learning You will have to monitor your thinking while you\u0026rsquo;re testing to make sure you\u0026rsquo;re not doing any of this:\nYou are ripping yourself off every time you answer a question by pattern: If you say \u0026ldquo;I remember that the question that started this way should have the answer that started that way\u0026rdquo;, then you are robbing yourself of a valuable learning opportunity. Always only ever answer the question after you understand the full context of the question. Never guess on the practice exams. You win nothing by guessing the right answer on a practice exam. You\u0026rsquo;re short-changing yourself and causing yourself to lose one valuable practice exam question every time you guess. If you\u0026rsquo;re not sure of the answer you can flag the question. You then will have to be sure to review your flagged questions when you\u0026rsquo;re doing your review process. You can guess on the official exam and you\u0026rsquo;ll lose nothing there because you can\u0026rsquo;t get a list of your failed questions and review them on the official exam.\nResources Testing is not the source of the information you are tested on.\nThe practice exams provide answers to the questions you are tested on that you can view after you answer the question, and those answers have content and links to other information resources.\nOrganized informational content can be much more effective and helpful than simply Googling each question or browsing YouTube videos.\nHere are some of the resources I found most useful and referred to most often:\nFree AWS Support – Knowledge Center Here are some of the most frequent questions and requests that AWS receive from their customers. This is a large set of questions and answers. AWS Docs Many links to API references, User Guides, labs, tutorials Organized and presented docs from the 264 AWS docs repos at Amazon Web Services - Documentation AWS Prescriptive Guidance AWS Well-Architected Labs Guided well-architected labs. AWS Security Workshops Guided security labs. Adding Security into DevOps Guided security labs for DevOps. AWS Samples - GitHub Many GitHub repos with many examples in each. Paid Udemy Udemy course providers tend to publish code and presentation slides in .zip format. That\u0026rsquo;s one reason to store your notes in a local folder git repo. You can expand each of the zips into folders for each course. The presentation slides and cheat sheets are much denser exam-oriented facts than what you\u0026rsquo;ll find in AWS Docs or online. Stephane Maarek Maarek provides the densest, most extensive course material and practice exams. There are very slight narration annoyances that might reduce the multi-listen quality. I have most of his courses because they are the fullest single-source courses if you want to do just one per Exam. Neil Davis, DataCloud Neil Davis\u0026rsquo;s courses are also very good and the narration is a little clearer, for the listening phase of your study. His practice exams might be slightly weaker. Cantrill.io Cantrill\u0026rsquo;s courses are the most comprehensive, long-range course material. He publishes his code and content in actual GitHub repos, so it\u0026rsquo;s much easier to check out, organize and get updates. You can also create your own upstream remote repo to push any changes or updates you might make. His videos have the best explanations, which is useful for the listening phase of your study schedule. Thinking in tests is thinking in bets Testing does not just aid learning. It can also be quite a useful thinking aid.\nOnce you\u0026rsquo;ve started regularly testing yourself, like with the course section tests, you can develop the skill to ask your own questions as you go along in the tutorials. The only way to understand the topic being discussed is to ask yourself questions about how the topic service might interact with other systems and what the limits probably are.\nWhen you make a guess about the AWS feature you should immediately think of it in the form of a bet with yourself, and then test the bet as soon as possible in your own AWS account.\nFor instance, if you are introduced to a new AWS service such as EFS storage you can immediately start asking yourself how it compares to other AWS storage services you already know about such as S3 and EBS.\nMany other tech-oriented organization tools already resemble self-testing:\nTemplates have checklists and checklists have checkmarks. Any task that you will perform in your tech career will eventually develop into a checklist. The sooner you can create the checklist the better. Test-Driven Design and behavior-driven design are methods of creating completion tests before you start the work. Tests are similar to goal-validation qualifiers. Rubber ducky programming is testing your exposition. This method of programming-thinking simply requires you to explain your thinking about a programming problem you are having. The act of explaining to another person is often enough to get over the thinking hurdle. Your Note-taking System I would advise creating a folder for all your AWS notes and using a folder-aware text editor like VS Code or Vim to become very comfortable with storing all your content.\nYou can create a separate folder for each AWS Exam you\u0026rsquo;re pursuing and put all AWS Exam Guide and Practice Exam pdfs in that folder.\nYou can put a note file like _index.md for general notes for that folder in every folder and subfolder. That file will sort to the top.\nThen you can create a git repo for that folder and push it to a host like GitHub which will render your markdown notes in a webpage, complete with image links.\nUpdates to this article A couple of additional articles are already growing out of these notes. I will be updating this article over the next month by adding content and adding links to the other two articles, so please check back.\nAlso, if you have anything interesting to add, you can create a PR for this article here\n"},{"uri":"http://whywe.tech/pro-logic/","title":"Pro Logic","tags":[],"description":"","content":"Logic is best defined as non-contradictory identification.\n"},{"uri":"http://whywe.tech/pro-logic/static-sites-for-active-documentation/","title":"Static Sites for Active Documentation","tags":[],"description":"","content":" Portability ASCII Markdown Folder tree hierarchy navigation Serverless Micropublishing Independent of server archetecture/tech stack Text Transpilation Ingest process all data sources into ASCII word structures Render ASCII word structures into any display format Word-based concept storage and processing Active Notebooks REPL Interactive Data-Info Programming Learning by doing recursivity "},{"uri":"http://whywe.tech/anti-logic/","title":"Anti-Logic","tags":[],"description":"Exploring the social status of logic.","content":"Anyone using a computer in the 21st century should have at least some cursory respect for logic, but why is logic not a commonly declared ideal like physical health or wisdom?\nThe Problem With Spock While the Spock character from \u0026ldquo;Star Trek\u0026rdquo; is a generally pro-logic character, he perpetuates one very destructive myth about the nature of logic, that it is opposed to and separate from emotion and feeling.\nEmotional Isolation This is so destructive because it sets in stone a non-existent dichotomy between reason and our entire emotional lives. It makes logic appear as cold and heartless and meaningless. It leaves many people, people who want to have meaningful lives, wanting to escape the mechanistic, predetermined world \u0026ldquo;constrained\u0026rdquo; by lifeless, emotionless reason.\nThis take, of a dichotomy between logic and emotions, is so baseless and counter to the facts of reality that one must wonder how it has survived for so long.\nWomen in Tech The negative connotation of \u0026ldquo;cold logic\u0026rdquo; impacts women\u0026rsquo;s acceptance of tech.\nWhy Women Don't Code - Quillette\nThe Problem With \u0026ldquo;Balancing\u0026rdquo; Logic and Emotion It might be tempting to accept the idea of balancing these two supposed opposites as a solution to the false dichotomy, such as is explained in this video:\nShould You Be Captain Kirk Or Are You Mister Spock?\nThis is a partial solution to a very real problem, but unfortunately it perpetuates the real problem. What\u0026rsquo;s wrong here is that it still accepts that logic and emotion are opposites, which must then be \u0026ldquo;balanced\u0026rdquo;. Why not go all the way and accept that they are not even opposites and that they should, instead, be integrated together into a unified whole, rather than balanced as two opposing forces?﻿\n"},{"uri":"http://whywe.tech/anti-tech/why-alien-life-would-be-our-doom/","title":"Why Alien Life Would Be Our Doom","tags":[],"description":"","content":"Here is just another anti-tech screed styled as observation on alien life forms.\nIf anyone doubts that there is an ideological war against tech, here is yet another example.\n"},{"uri":"http://whywe.tech/other-users/","title":"The Value of Other Users","tags":[],"description":"","content":"I am reading Judea Pearl\u0026rsquo;s fascinating book \u0026ldquo;The Book of Why\u0026rdquo;, about the cognitive liberation going on in science due to the innovation of causal notation. The mere creation of a new causal notation in science diagrams and notation syntax has revealed a whole new facet about how our minds and actions integrate with scientific outcomes.\nIn it he tells the story of a scientist who had discovered the Bayesian networks the author developed, but 20 years earlier. The prior scientist wasn\u0026rsquo;t able to develop the idea further because it would have required thousands of transistors on a chip, which wasn\u0026rsquo;t quite imaginable at the time.\nThis scenario highlights one of the values of thick markets of technological goods. Other people are developing solutions to problems you do not know you have yet. You don\u0026rsquo;t always have to wait until you have the problem and then start working on the solution.\n"},{"uri":"http://whywe.tech/anti-tech/","title":"Anti-Tech","tags":[],"description":"Anti-tech forces retard technical progress, and they have been operating for a long time.","content":"There has been a long-term concerted ideological resistance to technical innovation. It is so deep and widespread that I realized I had to start organizing it\u0026rsquo;s ideas into a system, which is the very thing the anti-techs are against.\nThis project was not revealed to me by divine inspiration, and my ability to develop it is not a \u0026ldquo;gift\u0026rdquo;. It is a step-wise process and is still in development.\nHere is my most recent discovery of ideologically anti-technological hypothesis:\nThe People vs Tech\n"},{"uri":"http://whywe.tech/posts/testing-to-learn/dimitri-qa/","title":"","tags":[],"description":"","content":"[7/18 7:21 AM] Dimitri Bello Good morning Mark - my name is Dimitri, and i am with the Cloud \u0026amp; IT infrastructure team! Congrats of your recent AWS certification, and i would like to ask you if you have any resource to recommend as practice tests? i am planning to take the solutions architect in the near future!\n[8/18 8:28 AM] Mark Stouffer I was taking the exams in order to learn AWS. I was using a kind of test-to-learn process, so that turned out to mean that testing turned out to be one of the biggest tools I used to prepare for the exams, too. I found a few free or very cheap practice tests, but the best ones I found are about $13-$20 on Udemy, when they have a sale every few weeks. Sometimes they pop up to $60-$100, but WestMonroe reimburses for them anyway. like 1\nSearch for exams for the test you\u0026rsquo;re going to take with either of these guys:\nSO you definetely want to take as many practice exams you can fit in. They take two to three hours, and then you have to review all the answers you didn\u0026rsquo;t KNOW, not just guessed right, but KNOW, so that is a time cost you have to calculate into your considerations, but it was the most dense learning, for me.\n[8/18 8:39 AM] Mark Stouffer All those authors and other also have good training courses too, and you will probably want one of those also, to connect the dots and provide better context. They have walk-through labs that you can follow along and some code, and important PDF slides. The slides have condensed graphics on each of the topics which are very helpful. Neal Davis has sets of cheat sheets for each topic.\n[8/18 8:42 AM] Mark Stouffer You want to review the subject matter that you get wrong on the exams before you retake any practice exam. You want to be sure you\u0026rsquo;re not just memorizing ANY questions. You kind of have to self-monitor that, because it will weaken you when the real exam is slightly different and you\u0026rsquo;ve only memorized the words or terms or names. Sometimes the exam will describe the process instead of using the name of the solution.\n[8/18 8:49 AM] Mark Stouffer The most comprehensive background material with the best videos and course material, if you have a little more time to study is the courses at https://cantrill.io/. I went back and got the \u0026ldquo;learn everything\u0026rdquo; course there. He has multiple repos and code labs and stuff and his explanations are the easiest to understand and deepest. He doesn\u0026rsquo;t have a mobile app, so you have to listen in the browser on your phone if you\u0026rsquo;re at that point.\nStephane Maarek, above, can be a little hard to understand sometimes because he speaks very fast and is a little sloppy with actually pronouncing the words he\u0026rsquo;s saying. It\u0026rsquo;s not a problem you can\u0026rsquo;t understand, but when listening a lot it can be distracting. Cantrill is SUPER clear. Home Woolie thinking is a fuzzy collection of early-stage ideas, thoughts and posts covering IT training, Emerging Technology and anything else i find interesting.\n[8/18 8:54 AM] Mark Stouffer The Udemy exams are a little tough to review because when you follow a link and then return it doesn\u0026rsquo;t take you back to the question or the test it. It takes you back to the course. That makes it so you don\u0026rsquo;t want to follow a link to the source material. I just make a scraper yesterday so that I can copy the results of the test into a local HTML doc in a private repo and convert it into a Markdown doc with collapsible sections for the answers. Then you can view it on Github as a web page with collapsible sections and follow links in the browser, instead of the Udemy app which can be very annoying. like 1\n[8/18 10:59 AM] Mark Stouffer I think you might even be able to see these cheat sheets without a login: https://digitalcloud.training/category/aws-cheat-sheets/aws-security-identity-compliance/ like 1 AWS Security Identity \u0026amp; Compliance – Digital Cloud Training\n"},{"uri":"http://whywe.tech/posts/testing-to-learn/validating-experience/","title":"","tags":[],"description":"","content":"Validating Experience If you\u0026rsquo;ve used AWS services for any length of time, you have some knowledge about them but you don\u0026rsquo;t know exactly how your knowledge set relates to other people.\nTo align our understanding of the AWS set of services and systems we can start by looking at what the exam guide lists as knowledge domains for, as an example, the Certified Developer Associate Exam (DVA-C01):\nDomain 1 Deployment 22% Deploy written code in AWS using existing CI/CD pipelines, processes, and patterns Deploy applications using Elastic Beanstalk Prepare the application deployment package to be deployed to AWS Deploy serverless applications Domain 2: Security 26% Make authenticated calls to AWS services Implement encryption using AWS services Implement application authentication, and authorization Domain 3: Development with AWS Services 30% Write code for serverless applications Translate functional requirements into application design Implement application design into application code Write code that interacts with AWS services by using APIs, SDKs, and AWS CLI Domain 4: Refactoring 10% Optimize application to best use AWS services and features Migrate existing application code to run on AWS Domain 5: Monitoring and Troubleshooting 12% Write code that can be monitored Perform root cause analysis on faults found in testing or production The percentages are an attempt to quantify the valid knowlege set for a Developer Associate, but they only tell us the portion of the total knowledge set a prospective Developer Associat needs for Deployment. Those numbers tell us nothing about the quantity of data elements.\nExams can give us a much better idea of the quantity of data elements that a person needs to know to understand Deployment at the Developer Associate level.\n[7/18 7:21 AM] Dimitri Bello Good morning Mark - my name is Dimitri, and i am with the Cloud \u0026amp; IT infrastructure team! Congrats of your recent AWS certification, and i would like to ask you if you have any resource to recommend as practice tests? i am planning to take the solutions architect in the near future!\n[8/18 8:28 AM] Mark Stouffer I was taking the exams in order to learn AWS. I was using a kind of test-to-learn process, so that turned out to mean that testing turned out to be one of the biggest tools I used to prepare for the exams, too. I found a few free or very cheap practice tests, but the best ones I found are about $13-$20 on Udemy, when they have a sale every few weeks. Sometimes they pop up to $60-$100, but WestMonroe reimburses for them anyway. like 1\nSearch for exams for the test you\u0026rsquo;re going to take with either of these guys:\nSO you definetely want to take as many practice exams you can fit in. They take two to three hours, and then you have to review all the answers you didn\u0026rsquo;t KNOW, not just guessed right, but KNOW, so that is a time cost you have to calculate into your considerations, but it was the most dense learning, for me.\n[8/18 8:39 AM] Mark Stouffer All those authors and other also have good training courses too, and you will probably want one of those also, to connect the dots and provide better context. They have walk-through labs that you can follow along and some code, and important PDF slides. The slides have condensed graphics on each of the topics which are very helpful. Neal Davis has sets of cheat sheets for each topic.\n[8/18 8:42 AM] Mark Stouffer You want to review the subject matter that you get wrong on the exams before you retake any practice exam. You want to be sure you\u0026rsquo;re not just memorizing ANY questions. You kind of have to self-monitor that, because it will weaken you when the real exam is slightly different and you\u0026rsquo;ve only memorized the words or terms or names. Sometimes the exam will describe the process instead of using the name of the solution.\n[8/18 8:49 AM] Mark Stouffer The most comprehensive background material with the best videos and course material, if you have a little more time to study is the courses at https://cantrill.io/. I went back and got the \u0026ldquo;learn everything\u0026rdquo; course there. He has multiple repos and code labs and stuff and his explanations are the easiest to understand and deepest. He doesn\u0026rsquo;t have a mobile app, so you have to listen in the browser on your phone if you\u0026rsquo;re at that point.\nStephane Maarek, above, can be a little hard to understand sometimes because he speaks very fast and is a little sloppy with actually pronouncing the words he\u0026rsquo;s saying. It\u0026rsquo;s not a problem you can\u0026rsquo;t understand, but when listening a lot it can be distracting. Cantrill is SUPER clear. Home Woolie thinking is a fuzzy collection of early-stage ideas, thoughts and posts covering IT training, Emerging Technology and anything else i find interesting.\n[8/18 8:54 AM] Mark Stouffer The Udemy exams are a little tough to review because when you follow a link and then return it doesn\u0026rsquo;t take you back to the question or the test it. It takes you back to the course. That makes it so you don\u0026rsquo;t want to follow a link to the source material. I just make a scraper yesterday so that I can copy the results of the test into a local HTML doc in a private repo and convert it into a Markdown doc with collapsible sections for the answers. Then you can view it on Github as a web page with collapsible sections and follow links in the browser, instead of the Udemy app which can be very annoying. like 1\n[8/18 10:59 AM] Mark Stouffer I think you might even be able to see these cheat sheets without a login: https://digitalcloud.training/category/aws-cheat-sheets/aws-security-identity-compliance/ like 1 AWS Security Identity \u0026amp; Compliance – Digital Cloud Training\n"},{"uri":"http://whywe.tech/books/","title":"Books","tags":[],"description":"","content":""},{"uri":"http://whywe.tech/books/gods-and-robots/","title":"Gods and Robots","tags":[],"description":"","content":""},{"uri":"http://whywe.tech/series/","title":"Series","tags":[],"description":"","content":""},{"uri":"http://whywe.tech/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"http://whywe.tech/topics/","title":"Topics","tags":[],"description":"","content":""},{"uri":"http://whywe.tech/why-we-tech/","title":"Why We Tech","tags":[],"description":"The moral case for technology","content":"Prometheus is tortured for bringing fire, pyrotechnics, down from heaven.\nIcarus is punished for inventing human flight.\nAdam and Eve are \u0026ldquo;cast out\u0026rdquo; from the Garden of Eden and convicted with \u0026ldquo;original sin\u0026rdquo; for all generations to come, for the crime of tasting of the tree of knowledge.\nThere is a deep schism between the intellectuals of morality and the intellectuals of technology.\nToday this is manifested in the division between the tech departments of academia and the humanities.\nThe humanities departments operate as a new clergy. They argue the moral cases of society. They discuss the very central issues to humans and to our life in this world, and they use modern technology such as statistics and technical studies to make their case. The technical basis lends them the prestige of science, which has been so obviously successful at producing solutions. Unfortunately, their philosophical sub-basement still contains the cobwebs, carcasses and echoes of their ancient religious catacombs.\nThe philosophical basis of the modern humanitarian clerics has crawled straight out of the swamps of pre-civilized early man, and taken residence in the halls of the academy.\n"}]